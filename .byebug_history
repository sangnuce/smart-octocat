continue
not_deployed_pulls
continue
PullRequest.first
not_deployed_pulls
continue
to_part
continue
message
continue
pull.title
pull = not_deployed_pulls.first
not_deployed_pulls
message.present?
message
continue
pull.title
pull
not_deployed_pulls
continue
PullRequest.last.update merged: true
PullRequest.not_deployed
PullRequest.last
PullRequest.not_deployed
to_part
message
continue
@pull_request
continue
to_part.select{|f| f != ""}.size
to_part.select{|f| f != ""}
to_part
[nil,nil].size
to_part.size
to_part
continue
@pull_request
continue
@pull_request.update happy_reviewer_num: 0
@pull_request
continue
@pull_request
continue
@pull_request
continue
@pull_request
continue
@pull_request.state
@params["pull_request"]["state"]
@params["pull_request"]
@pull_request.state
@pull_request
continue
@pull_request
continue
room
continue
@room
continue
@action
Room.all
@params["repository"]["html_url"]
@params["repository"]
@params
@room
continue
@params["repository"]["html_url"]
@params["repository"]
@params["sender"]
@params["pusher"]
@params["action"]
@params.keys
@params
@action
continue
@pull_request["html_url"]
continue
@pull_request["html_url"]
to_part
n
to_part
n
reviewers = User.joins(:user_rooms).where("room_id = ? AND (user_rooms.role = ? OR user_rooms.role = ?)", room.id, 0, 1)
reviewers = User.joins(:user_rooms).where("room_id = ? AND (user_rooms.role = ? OR user_rooms.role = ?)", room.id, 0, 1).count
User.joins(:user_rooms).where("room_id = ? AND (user_rooms.role = ? OR user_rooms.role = ?)", room.id, 0, 1).count
User.joins(:user_rooms).where("room_id = ? AND (user_rooms.role = ?OR user_rooms.role = ?)", room.id, 0, 1).count
User.joins(:user_rooms).where "room_id = ? AND (user_rooms.role = ?OR user_rooms.role = ?)", room.id, 0, 1
reviewers.count
reviewers
n
Room.find_by project_github_link: @params["repository"]["html_url"]
@params["repository"]["html_url"]
pull_owner
n
User.count
continue
User.count
@pull_request["user"]["login"]
pull_owner
n
continue
HTTP.headers("X-ChatWorkToken" => "256a72efa51cd416b879d729eb794ee2").post("https://api.chatwork.com/v1/rooms/60833608/messages", body: body)
HTTP.headers("X-ChatWorkToken" => "256a72efa51cd416b879d729eb794ee2")
pull_owner
continue
params["review"]["html_url"]
params["review"]["pull_request_url"]
params["review"].keys
params["review"]
continue
request.headers["X-GitHub-Event"]
continue
request.headers["X-GitHub-Event"]
continue
request.headers["X-GitHub-Event"]
continue
request.headers["X-GitHub-Event"]
request.header["X-GitHub-Event"]
continue
action
n
continue
params["pull_request"]["user"]
params["pull_request"].keys
params["comment"]["user"]
params["comment"].keys
params["comment"]
params
request.headers["X-GitHub-Event"]
request.headers
request.header 
continue
params
